/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
import spock.lang.Specification
import com.jim.toolkit.database.H2TableMethods;
import com.jim.toolkit.database.H2TableSupport;
import java.sql.SQLException;
import java.text.SimpleDateFormat;

class H2TableSupportTest extends Specification {
    def "Simple H2TableSupport constructor returns proper names for database connection values"() {
        setup:
		    H2TableSupport obj = null;
        when:
            obj = new H2TableSupport();
            def conn = obj.sql.toString()
        then:
        	obj.dbtable  == "core"
        	conn.startsWith("groovy.sql.Sql") == true
    } // end of test

    def "obj.drop('Fred');"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport();
            def msg = obj.drop("Fred");
        then:
            msg == "... dropped H2 database table Fred ok"
    } // end of test

    def "obj.create('Fred') table"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport();
            def msg = obj.create("Fred");
        then:
            msg == "... created H2 database table Fred ok"
    } // end of test

    def "obj.drop()"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport();
            def msg = obj.drop();
        then:
            msg == "... dropped H2 database table core ok"
    } // end of test

    def "obj.create() table"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport();
            def msg = obj.create();
        then:
            msg == "... created H2 database table core ok"
    } // end of test


    def "obj.drop() from H2TableSupport('Mary')"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport("Mary");
            def msg = obj.drop();
        then:
            msg == "... dropped H2 database table Mary ok"
    } // end of test


    def "obj.create() table from H2TableSupport('Mary')"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport("Mary");
            def msg = obj.create();
        then:
            msg == "... created H2 database table Mary ok"
    } // end of test


    def "obj.drop('Mary') table then select()"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport("Mary");
            def msg = obj.drop("Mary");
            println "--> "+msg;
            def ans = obj.select();
            println "--> "+ans;

        then:
            //Exception ex = thrown()
            // Alternative syntax: def ex = thrown(InvalidDeviceException)
            //ex.message == 'Please use oven for this recipe.'
            msg == "... dropped H2 database table Mary ok"
            ans[0].startsWith("Exception Message :Table \"MARY\" not found; SQL statement:") == true
    } // end of test


    def "obj.select() of core table"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport();
            def ans = obj.select();
            println "--> "+ans;

        then:
            ans==[]
            //ans[0].startsWith("... selected 0 rows from H2 database table core ok") == true
    } // end of test


    def "obj.select(xxx) of 'xxx' table"() {
        setup:
            H2TableSupport obj = null;
        when:
            obj = new H2TableSupport('xxx');
            def ans = obj.select();
        then:
            ans[0].startsWith("Exception Message :Table \"XXX\" not found; SQL statement:")==true
            //ans[0].startsWith("... selected 0 rows from H2 database table core ok") == true
    } // end of test


    def "obj.select() table from H2TableSupport() of core table"() {
        setup:
            H2TableSupport obj = new H2TableSupport();
        when:
            def ans = obj.select();

        then:
            ans==[]
            //ans[0].startsWith("... selected 0 rows from H2 database table core ok") == true
    } // end of test


    def "insert row into Fred table using sql handle in H2TableSupport()"() {
        setup:
            H2TableSupport obj = new H2TableSupport('Fred');
            H2TableMethods h2tm = new H2TableMethods();
            def msg = obj.drop('Fred');  

        when:
            msg = h2tm.setUp('Fred',"id int, date date, type char") 

            String stmt = "INSERT INTO Fred values(:id, :date, :type)"
            msg = obj.sql.execute(stmt, [id:2, date:new Date(), type:'Q'])
        then:
            msg == false        
            h2tm.count('Fred') == 1
    } // end of test

    def "What's the result of deleting the Fred table using a method in H2TableSupport()"() {
        setup:
            H2TableSupport obj = new H2TableSupport('Fred');
        when:
            def msg = obj.drop('Fred');  
        then:
            msg == "... dropped H2 database table Fred ok"      
    } // end of test

} // end of class