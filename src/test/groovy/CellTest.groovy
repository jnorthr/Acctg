/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
import spock.lang.Specification
import groovy.beans.*
import com.jim.toolkit.Cell;

class CellTest extends Specification {
    def "Simple Cell constructor returns proper name of action"() {
        setup:
		    Date dat = Date.parse('yyy-MM-dd','2017-01-01');
			Cell obj = new Cell([date:dat, type:'B', amount:-123.45, number:123, flag:true, reason:'Start'])
		
        when:
        	def result = obj.cvtType()
        	println "... result=[${result}]"
        	println "... date=[${obj.date.toString()}]"

        then:
        	result == "Income "
        	obj.date.toString() == 'Sun Jan 01 00:00:00 CET 2017'
        	obj.type == 'B'
        	obj.amount == -123.45
        	obj.number == 123
        	obj.flag == true;
        	obj.reason == 'Start'
    } // end of test
    
    
    def "Simple Cell constructor using Map"() {
        setup:
		    Date dat = Date.parse('yyy-MM-dd','2017-01-01');
			Cell obj = null;
			
        when:
	        dat += 4;
    	    Map m = [id:27, date:dat, type:'C', amount:-75.05, number:13, flag:true, reason:'Bingo'];
        	obj = new Cell(m);
	        println "Cell(map).toString() = [${obj.toString()}]"
	        def cellmap = obj.toMap();

        then:
        	obj.id == 27
        	obj.date.toString() == 'Thu Jan 05 00:00:00 CET 2017'
        	obj.type == 'C'
        	obj.amount == -75.05
        	obj.number == 13
        	obj.flag == true;
        	obj.reason == 'Bingo'
        	
        	cellmap instanceof Map
			cellmap['id'] == 27
			cellmap['flag'] == true
			cellmap['type'] == 'C'
			cellmap['amount'] == -75.05
        	cellmap['reason'] == 'Bingo'
        	cellmap['date'] == '2017-01-05'
    } // end of test
    
    
    def "Simple Cell constructor using Binding"() {
        setup:
		    Date dat = Date.parse('yyy-MM-dd','2017-12-25');
			Cell obj = null;
	        Binding binding = new Binding();
        	binding.setVariable("id", 14);
    	    binding.setVariable("date", dat);
        	binding.setVariable("type", "C");
        	binding.setVariable("amount", -1.23);
        	binding.setVariable("number", 64);
        	binding.setVariable("flag", true);
        	binding.setVariable("reason", "Reason for deed");
			Cell obj2 = new Cell();
			
        when:
	        obj2.setBinding(binding)
    	    println "Cell.setBinding(binding) = [${obj2.toString()}]\n"
	        def cellmap = obj2.toMap();

        then:
        	//obj2.id == 0 -now not Zero since H2Table had max() method added
        	obj2.date.toString() == 'Mon Dec 25 00:00:00 CET 2017'
        	obj2.type == 'C'
        	obj2.amount == -1.23
        	obj2.number == 64
        	obj2.flag == true;
        	obj2.reason == 'Reason for deed'
        	
        	cellmap instanceof Map
			//cellmap['id'] == 0
			cellmap['flag'] == true
			cellmap['type'] == 'C'
			cellmap['amount'] == -1.23
        	cellmap['reason'] == 'Reason for deed'
			cellmap['number'] == 64
        	cellmap['date'] == '2017-12-25'
    } // end of test

    
    def "Cell constructor using data values only"() {
        setup:
		    Date dat = Date.parse('yyy-MM-dd','2017-12-25');
			Cell obj3 = null;
	        boolean yn = true;
    	    char ch= 'C'
			
        when:
        	obj3 = new Cell(17,dat,ch,12.34,77499,yn, "Hi kids");
	        println "Cell3 = ${obj3.toString()}"

        then:
        	//thrown groovy.lang.GroovyRuntimeException
        	obj3.id == 17
        	obj3.date.toString() == 'Mon Dec 25 00:00:00 CET 2017'
        	obj3.type == 'C'
        	obj3.amount == 12.34
        	obj3.number == 77499
        	obj3.flag == true;
        	obj3.reason == 'Hi kids'
    } // end of test
    
    
    def "Cell constructor using some limited data values only"() {
        setup:
		    Date dat = Date.parse('yyy-MM-dd','2017-12-25');
			Cell obj4 = null;
    	    char ch= 'C'
			
        when:
        	obj4 = new Cell(27,dat,ch,12.34);
	        println "Cell4 = ${obj4.toString()}"

        then:
        	obj4.id == 27
        	obj4.date.toString() == 'Mon Dec 25 00:00:00 CET 2017'
        	obj4.type == 'C'
        	obj4.amount == 12.34
        	obj4.number == 0
        	obj4.flag == false;
        	obj4.reason == 'unknown'
			
			//groovy.lang.GroovyRuntimeException ex = thrown()
			
            // Alternative syntax: def ex = thrown(InvalidDeviceException)
            //ex.message == 'Could not find matching constructor for: Cell(java.lang.Integer, java.util.Date, java.lang.Character, java.math.BigDecimal)'            
    } // end of test

    
    def "Cell constructor using Binding"() {
        setup:
		    Date dat = Date.parse('yyy-MM-dd','2017-12-25');
			Cell obj5 = null;
	        Binding binding = new Binding();
        	binding.setVariable("id", 14);
    	    binding.setVariable("date", dat);
        	binding.setVariable("type", "C");
			
        when:
        	obj5 = new Cell(binding);
	        println "Cell5 = ${obj5.toString()}"

        then:
			groovy.lang.GroovyRuntimeException ex = thrown()
			
            // Alternative syntax: def ex = thrown(InvalidDeviceException)
            ex.message == 'Could not find matching constructor for: com.jim.toolkit.Cell(groovy.lang.Binding)'            
    } // end of test
    
    
} // end of class
