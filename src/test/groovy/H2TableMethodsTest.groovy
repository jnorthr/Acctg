/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
import spock.lang.* 
import spock.lang.Specification
import com.jim.toolkit.database.H2TableSupport;
import com.jim.toolkit.database.H2TableMethods;
import java.sql.SQLException;
import java.text.SimpleDateFormat;

class H2TableMethodsTest extends Specification {
	@Shared H2TableMethods obj

	// run before the first feature method
	def setupSpec() 
	{
        obj = new H2TableMethods();
        obj.h2.drop('Fred');  
	} // end of setupSpec()      
	
	def cleanupSpec() 
	{
		println "... cleanupSpec()="+obj.h2.drop('Fred');  
	} // end of cleanupSpec() 


    def "setUp Fred table using H2TableMethods() & erase Fred if it exists"() {
        when:
            def msg = obj.setUp('Fred',"id int, date date, type char") 
        then:
            msg == "... created H2 database table Fred ok"        
    } // end of test


    def "pick rows from Fred table using method in H2TableMethods()"() {
        setup:
        	println "... pick rows from Fred table using method in H2TableMethods()"
            def dt = new Date()
            def format = new SimpleDateFormat("yyyy-MM-dd");
            def dat = format.format(dt);
            def msg = obj.setUp('Fred',"id int, date date, type char") 
            String stmt = "INSERT INTO Fred values(:id, :date, :type)"
            msg = obj.sql.execute(stmt, [id:2, date:dat, type:'Q'])

        when:
            def row = obj.pick('Fred', 2);
            println "... row="+row;
            row.each{ println "... ->"+it.toString();}
        then:
            row != null
            row.id == 2
            row.DATE.toString() == dat
            row.TYPE == 'Q'
    } // end of test

    def "count number of rows in Fred table using method in H2TableMethods()"() {
        setup:
            def msg = obj.setUp('Fred',"id int, date date, type char") 
            String stmt = "INSERT INTO Fred values(:id, :date, :type)"
            msg = obj.sql.execute(stmt, [id:2, date:new Date(), type:'Q'])

        when:
            msg = obj.count('Fred');
            def id = obj.max('Fred');
        then:
            msg == 1    //"... count() how many rows :1"  
            id == 2    
    } // end of test



    def "Decode a string of text returned from a select() method in H2TableSupport()"() {
        setup:
	        def txt = "[ID:44, FLAG:true, NAME:Forty Four, REASON:B/C §±!@£%^&*()_+[]{};':|`~]"
        when:
            Map m = obj.decode(txt)
        then:
            m instanceof Map == true   
            m['FLAG']=='true'  
    } // end of test



    def "What's the result of deleting the Fred table using a method in H2TableMethods()"() {
        setup:
			def txt = obj.setUp('Fred',"id int, date date, type char") 
        when:
            def msg = obj.h2.drop('Fred');  
        then:
            msg == "... dropped H2 database table Fred ok"      
    } // end of test

} // end of class