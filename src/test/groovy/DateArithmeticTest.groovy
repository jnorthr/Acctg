/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
import spock.lang.Specification
import com.jim.toolkit.tools.DateArithmetic;
import static java.util.Calendar.*

class DateArithmeticTest extends Specification {

    def "Simple DateArithmetic constructor returns proper name of class"() {
        setup:
	        DateArithmetic obj = new DateArithmetic();
		
        when:
        	def result = obj.classname

        then:
        	result == "DateArithmetic"
    } // end of method

    
    def "Increment Java Date value by 7 months from same date"() {
        setup:
		    Date date = Date.parse('yyy-MM-dd','2017-01-01');
	        DateArithmetic obj = new DateArithmetic();
			
		when:
			def dat = obj.bumpMonth(date, 7);

		then:
			dat[YEAR] == 2017;
			dat[MONTH] == 7;
			dat[DATE] == 01
	} // end of method

    
    def "Increment Java Date value by 7 days from same date"() {
        setup:
		    Date date = Date.parse('yyy-MM-dd','2018-01-01');
	        DateArithmetic da = new DateArithmetic();
			def yr = date[Calendar.YEAR]
			def mo = date[Calendar.MONTH]
			def day = date[Calendar.DATE]
			
		when:
			println "... test 1a: date[YEAR]=|${yr}|  date[MONTH]=|${mo}|  date[DATE]=|${day}| ";
			Date dat = da.bumpDays(date, 7);
			yr = dat[Calendar.YEAR]
			mo = dat[Calendar.MONTH]
			day = dat[Calendar.DATE]
			println "... test 1b: dat[YEAR]=|${yr}|  dat[MONTH]=|${mo}|  dat[DATE]=|${day}| ";

		then:
			yr == 2018;
			mo == 0;
			day == 8;
	} // end of method

    
    def "Increment Java Date value by one day from same date"() {
        setup:
		    Date date = Date.parse('yyy-MM-dd','2017-01-01');
	        DateArithmetic da2 = new DateArithmetic();
			println "... test 2a: date[YEAR]=|${date[YEAR]}|  date[MONTH]=|${date[MONTH]}|  date[DATE]=|${date[DATE]}| date=|${date}|";
			
		when:
			Date dat = da2.bumpDay(date);
			println "... test 2b: dat[YEAR]=|${dat[YEAR]}|  dat[MONTH]=|${dat[MONTH]}|  dat[DATE]=|${dat[DATE]}| ";
			def yr = dat[Calendar.YEAR]
			def mo = dat[Calendar.MONTH]
			def da = dat[Calendar.DATE]
			println "... DateArithmeticTest:|${dat}| yr=|${yr}| mo=|${mo}| da=|${da}|";

		then:
			yr == 2017;
			mo == 0;
			da == 2;
	} // end of method

    
    def "Ask Java Date for which day of the week it is, like Monday,Saturday"() {
        setup:
		    Date date = Date.parse('yyy-MM-dd','2018-01-01');
	        DateArithmetic obj = new DateArithmetic();
			
		when:
			String dow = obj.getDayOfWeekName(date);
		then:
			dow == "Monday";
	} // end of method

    // Saturday is day 7 with Sunday as day 1
    def "Check Date for which number is the day of the week it is, like Monday=2,Saturday=7"() {
        setup:
		    Date date = Date.parse('yyy-MM-dd','2018-01-01');
	        DateArithmetic obj = new DateArithmetic();
			
		when:
			int dow = obj.getDayOfWeek(date);
		then:
			dow == 2; // monday
	} // end of method
	
} // end of class
