/*
 * This build file was generated by the Gradle 'init' task.
 *
 */

// Apply the groovy plugin to add support for Groovy
apply plugin: 'groovy'
apply plugin: 'application'

defaultTasks 'clean', 'build', 'distTar', 'distZip', 'groovydoc', 'javadoc', 'run','runEmployee'

mainClassName = "com.jim.toolkit.Employee"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for building this library
    implementation 'org.codehaus.groovy:groovy-all:3.0.8'
    implementation 'org.apache.ivy:ivy:2.4.0'
    //implementation 'org.apache.ivy', name: 'ivy', version: '2.4.0'

    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:2.0-groovy-3.0'
    testImplementation 'junit:junit:4.12'
}

test {
    testLogging {
        exceptionFormat "full"
    
        // Make sure output from
        // standard out or error is shown
        // in Gradle output.
        showStandardStreams = true
 
        // Or we use events method:
        // events 'standard_out', 'standard_error'
 
        // Or set property events:
        // events = ['standard_out', 'standard_error']
 
        // Instead of string values we can
        // use enum values:
        // events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
        //        org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
    }
}

// runs the main() method; args are ignored but maybe later ?
task(runExample, dependsOn: 'classes', type: JavaExec) {
		main = 'com.jim.toolkit.EditableTableExample'
		classpath = sourceSets.main.runtimeClasspath
} // end of task


// runs the Employee main() method; args are ignored but maybe later ?
task(runEmployee, dependsOn: 'classes', type: JavaExec) {
		main = 'com.jim.toolkit.Employee'
		classpath = sourceSets.main.runtimeClasspath
} // end of task

// runs the EmployeeTableModel main() method; args are ignored but maybe later ?
task(runTable, dependsOn: 'classes', type: JavaExec) {
		main = 'com.jim.toolkit.EmployeeTableModel'
		classpath = sourceSets.main.runtimeClasspath
} // end of task


